#!/usr/bin/perl

no warnings 'once'; # Keeps perl from bitching about variables used only once.

use strict;
use CGI;
use Data::Dumper;

use lib "/httpd/modules";
require TOXML::UTIL;
require TOXML::COMPILE;
require GTOOLS;
require ZOOVY;
require ZWEBSITE;
require LUSER;
my ($LU) = LUSER->authenticate(flags=>'_S&8');
if (not defined $LU) { exit; }

my ($MID,$USERNAME,$LUSERNAME,$FLAGS,$PRT) = $LU->authinfo();
if ($MID<=0) { exit; }

&ZOOVY::init();

$::DENIEDMSG = q~
We're very sorry, however the source code of the file you requested is NOT available for 
download and/or modification.<br>
<br> 
Usually this means the file is classified as a "prototype" or "concept" which contains new functionality 
that is NOT intended for public consumption/usage at this time. Usually this is to specifically limit the 
widespread deployment of the particular technology since we expect it to change.<br>
<br>

Some files may never be exported, simply because the technology which is contained within is so difficult to
support that we do not feel that we will be able to adequately support the resulting "forks" that will
inevitably result if the source code is made public. <br>
<br>

If you would like to have changes made to this particular file it will more than likely be considered as
part of a custom graphic design package. Please contact Zoovy Sales at 877-966-8948 x 2 for more information
on how to get this done.
~;


my @TABS = ();
## determine tabs available 
## WEB flag should see layout and wrapper tabs
if (index($FLAGS,',WEB,') > 0 ) {
	push @TABS, { name=>'Wrappers', link=>'index.cgi?MODE=WRAPPER', },
					{ name=>'Layouts', link=>'index.cgi?MODE=LAYOUT', },
					{ name=>'Emails', link=>'index.cgi?MODE=EMAIL', },
					{ name=>'Orders', link=>'index.cgi?MODE=ORDER', },
	}
## EBAY flag should see the wizard tab
if (index($FLAGS,',EBAY,') > 0 ) {
	push @TABS, { name=>'Wizards', link=>'index.cgi?MODE=WIZARD', };
	}

## API flag should see the definitions and includes tabs
if (index($FLAGS,',API,') > 0 ) {				
	push @TABS, { name=>'Definitions', link=>'index.cgi?MODE=DEFINITION', },
					{ name=>'Includes', link=>'index.cgi?MODE=INCLUDE', };
	}

## no authorization to edit TOXML
if (scalar(@TABS) == 0) {
	$GTOOLS::TAG{'<!-- FLAGS -->'} = $FLAGS;
	print "Content-type: text/html\n\n";
	&GTOOLS::print_form('','deny.shtml');
	exit;
	}
	
push @TABS, { name=>'Help', link=>'index.cgi?ACTION=HELP', };

my $q = new CGI;
my $ACTION = $q->param('ACTION');
my $MODE = $q->param('MODE');
my $DOCID = $q->param('DOCID');

## choices from top page
if ($ACTION eq "Edit") {
	
	&ZWEBSITE::save_website_attrib($USERNAME,'pref_template_fmt',uc($q->param('TYPE')));

	if ($q->param('TYPE') eq "xml") { $ACTION = "EDITXML"; }
	elsif ($q->param('TYPE') eq "html") { $ACTION = "EDITHTML"; }
	elsif ($q->param('TYPE') eq "plugin") { $ACTION = "EDITPLUGIN"; }
	else { $ACTION = ''; $GTOOLS::TAG{'<!-- MESSAGE -->'} = "Please choose a File Format ".$q->param('TYPE'); } 
	}

$GTOOLS::TAG{'<!-- MODE -->'} = $MODE;

## link for WEBDOC
my ($helplink, $helphtml) = GTOOLS::help_link('Template Syntax',50251);
$GTOOLS::TAG{'<!-- WEBDOC -->'} = $helphtml;

my $template_file = 'index.shtml';
my $header = 1;

print STDERR "ACTION=$ACTION MODE=$MODE DOCID=$DOCID\n";


my @BC = ();
push @BC, 	{ name=>'Setup',link=>'http://www.zoovy.com/biz/setup','target'=>'_top', },
      	 	{ name=>'Template Manager',link=>'http://www.zoovy.com/biz/setup/toxml/index.cgi?ACTION=HELP','target'=>'_top', };
    

if (($ACTION eq 'EDITXML') || ($ACTION eq 'EDITHTML') || ($ACTION eq 'EDITPLUGIN')) {
	$GTOOLS::TAG{'<!-- DOCID -->'} = $DOCID;
		
	$DOCID = '*'.$DOCID;
	my ($toxml) = TOXML->new($MODE,$DOCID,USERNAME=>$USERNAME,MID=>$MID);
	my ($cfg) = $toxml->findElements('CONFIG');

	if ((defined $cfg->{'EXPORT'}) && ($cfg->{'EXPORT'}==0)) {
		$GTOOLS::TAG{'<!-- AS_TYPE -->'} = 'forbidden';
		$GTOOLS::TAG{'<!-- CONTENT -->'} = $::DENIEDMSG;
		}
	elsif ($ACTION eq 'EDITXML') {
		$GTOOLS::TAG{'<!-- AS_TYPE -->'} = ' as Strict XML';
		$GTOOLS::TAG{'<!-- CONTENT -->'} = &ZOOVY::incode($toxml->as_xml());
		}
	elsif ($ACTION eq 'EDITHTML') {
		$GTOOLS::TAG{'<!-- AS_TYPE -->'} = ' as HTML';
		$GTOOLS::TAG{'<!-- CONTENT -->'} = &ZOOVY::incode($toxml->as_html());
		}
	elsif ($ACTION eq 'EDITPLUGIN') {
      $GTOOLS::TAG{'<!-- AS_TYPE -->'} = ' as Plugin';
      $GTOOLS::TAG{'<!-- CONTENT -->'} = &ZOOVY::incode($toxml->as_html(1));
      }
	
	$template_file = 'edit.shtml';
	}


if ($ACTION eq 'SAVEAS') {


	# load the flow style
	my ($CTYPE,$FLAGS,$SHORTNAME,$LONGNAME) = ();

	$DOCID =~ s/[^\w\-\_]+//gs;
	if ($DOCID eq '') { $DOCID = 'unnamed_'.time(); }
	$DOCID = '*'.$DOCID;
	
	my $content = '';
 	if (not defined $q->param('CONTENT')) {
		my $ORIGDOCID = $q->param('ORIGDOCID');
		my ($toxml) = TOXML->new($MODE,$ORIGDOCID,USERNAME=>$USERNAME,MID=>$MID);

		if (defined $toxml) { $content = $toxml->as_xml(); }
		else { warn("TOXML Could not load $MODE, $DOCID,USERNAME=>$USERNAME,MID=>$MID\n"); }

		my ($cfg) = $toxml->findElements('CONFIG');
		if ((defined $cfg->{'EXPORT'}) && ($cfg->{'EXPORT'}==0)) {
			$content = $::DENIEDMSG;
			}
		}
	else {
		$content = $q->param('CONTENT');
		}
	
	$GTOOLS::TAG{'<!-- DOCID -->'} = $DOCID;

	my ($toxml) = TOXML::COMPILE::fromXML($MODE,$DOCID,$content,USERNAME=>$USERNAME,MID=>$MID);
	if (defined $toxml) {
		$LU->log("SETUP.TOXML","Edited TOXML file MODE=$MODE DOCID=$DOCID","SAVE");
		$toxml->save();
		$DOCID = $toxml->docId();
		print STDERR "saving toxml: $DOCID as a $MODE\n";

		$GTOOLS::TAG{'<!-- MESSAGE -->'} = "<font color='blue'>successfully saved $DOCID</font>\n";
		}
	else {
		$GTOOLS::TAG{'<!-- MESSAGE -->'} = "<font color='red'>could not save $DOCID</font>\n";
		}
	$ACTION = '';
	}

if ($ACTION eq 'DOWNLOAD') {
	my $DOCID = $q->param('DOCID');
	$GTOOLS::TAG{'<!-- DOCID -->'} = $DOCID;

	my ($toxml) = TOXML->new($MODE,$DOCID,USERNAME=>$USERNAME,MID=>$MID);
	my $cfg = undef;
	my ($cfg) = $toxml->findElements('CONFIG');
	my $content = '';
	
	if ((defined $cfg->{'EXPORT'}) && ($cfg->{'EXPORT'}==0)) {
		$content = "<font color='red'>".$::DENIEDMSG.'</font>';
		}
	else {
		$content = &ZOOVY::incode($toxml->as_xml());
		$content =~ s/[\n\r]+/<br>/g;
		$content =~ s/&lt;ELEMENT/<font color='blue'>&lt;ELEMENT/gs;
		$content =~ s/\/ELEMENT&gt;/\/ELEMENT&gt;<\/font>/gs;
		}

	$GTOOLS::TAG{'<!-- CONTENT -->'} = $content;
	$template_file = 'output.shtml';
	}

if ($ACTION eq 'DELETE') {
	my $DOCID = $q->param('DOCID');
	my ($toxml) = TOXML->new($MODE,$DOCID,USERNAME=>$USERNAME,MID=>$MID);
	$toxml->nuke();
	
	$GTOOLS::TAG{'<!-- MESSAGE -->'} = "Removed $DOCID\n";
	$ACTION = '';
	}

if ($ACTION eq 'UPLOAD') {
	my $fh = $q->upload("FILENAME");
	my $BUFFER = "";
	my $filename = $q->param("FILENAME");
	if (!defined($filename)) { $filename = time(); }
	while (<$fh>) { $BUFFER .= $_; }
	print STDERR "file is: $filename\n";

	my $DOCID = $q->param('DOCID');
	$DOCID =~ s/[^\w\-\_]+//gs;
	if (substr($DOCID,0,1) ne '~') { $DOCID = "~$DOCID"; }
	## Grab the preview image if one exists.

	my $toxml = undef; 
	if (($filename =~ /\.xml$/) || ($filename =~ /\.html/) || ($filename =~ /\.flow/)) {
		($toxml) = TOXML::COMPILE::fromXML($MODE,$DOCID,$BUFFER,USERNAME=>$USERNAME,MID=>$MID);
		my ($configel) = $toxml->findElements('CONFIG');
		$LU->log("SETUP.TOXML","Uploaded TOXML file MODE=$MODE DOCID=$DOCID","SAVE");
		$toxml->save();
		}	

	if (not defined $toxml) {
		$GTOOLS::TAG{'<!-- MESSAGE -->'} = 'unknown file type - must be .xml, .html, or .flow';
		}
	elsif ($toxml->{'_HASERRORS'}) {
		$GTOOLS::TAG{'<!-- MESSAGE -->'} = ' page layout contains errors.';
		}
	else {
		my $path = &ZOOVY::resolve_userpath($USERNAME).'/TOXML';
		my $BUFFER = '';
		my $fh = $q->upload("IMGFILENAME");
		my $filename = $q->param("IMGFILENAME");
		if (!defined($filename)) { $filename = time(); }
		while (<$fh>) { $BUFFER .= $_; }
		print STDERR "file is: $filename\n";
	
		if ($BUFFER ne '') {
			open F, ">$path/$DOCID.gif";
			print F $BUFFER;
			close F;
			}
	
		$GTOOLS::TAG{'<!-- MESSAGE -->'} = "successfully uploaded $MODE.";
		}
	$ACTION = '';
	}

if ($ACTION eq 'ACKDELETE') {
	$GTOOLS::TAG{'<!-- DOCID -->'} = $q->param('DOCID');
	$template_file = 'confirmdelete.shtml';
	}


if ($ACTION eq 'TOP') {
	my $c = '';
	foreach my $k (sort keys %{$TOXML::UTIL::LAYOUT_STYLES}) {
		my $short = $TOXML::UTIL::LAYOUT_STYLES->{$k}[0];
		my $long = $TOXML::UTIL::LAYOUT_STYLES->{$k}[1];
		$c .= "<option value='$k'>$short</option>";
	}
	$GTOOLS::TAG{'<!-- FLOWSTYLE -->'} = $c;

	## Load the custom theme list.
	$c = '';
	my $arref = &TOXML::UTIL::listDocs($USERNAME,$MODE,DETAIL=>1);
	foreach my $inforef (@{$arref}) {
		next unless ($inforef->{'MID'}>0); 
		print STDERR Dumper($inforef);

		my $k = $inforef->{'DOCID'};
		my $name = $inforef->{'TITLE'};	

		# only look at userland flows
		$c .= "<a href='index.cgi?ACTION=EDITXML&DOCID=".CGI->escape($k)."'>[EDIT XML]</a> ";
		$c .= "<a href='index.cgi?ACTION=EDITHTML&DOCID=".CGI->escape($k)."'>[EDIT HTML]</a> ";
		$c .= "<a href='index.cgi?ACTION=ACKDELETE&DOCID=".CGI->escape($k)."'>[REMOVE]</a> ($k) $name<br>\n";
		}
	if ($c eq '') { $c = '<i>None</i>'; }
	$GTOOLS::TAG{'<!-- EXISTINGFLOWS -->'} = $c;

	## Load the full theme list for the select boxetemplates
	my $arref = &TOXML::UTIL::listDocs($USERNAME,$MODE,DETAIL=>1);
	$c = '';
	foreach my $inforef (reverse @{$arref}) {
		# only look at userland flows
		my $DOCID = $inforef->{'DOCID'};
		my $SUBTYPE = $inforef->{'SUBTYPE'};
		my $SUBTYPETXT = $TOXML::UTIL::LAYOUT_STYLES->{$SUBTYPE}[0];
		$c .= "<option value=\"$DOCID\">[$DOCID] $SUBTYPETXT: $inforef->{'TITLE'}</option>\n";
		}
	undef $arref;
	$GTOOLS::TAG{'<!-- ALLLAYOUTS -->'} = $c;
	
	$template_file = 'top.shtml';
	}

## Display top page for managing each MODE
if ($ACTION eq 'HELP') {
	$template_file = 'index.shtml';
	}









##
## saves theme and button settings into the wrapper (by physically modifying the wrapper)
##
if ($ACTION eq 'SAVE-SITEBUTTONS') {
	# Saves the site buttons and theme for a wrapper
	require TOXML::UTIL;

	my ($toxml) = TOXML->new('WRAPPER',$DOCID,USERNAME=>$USERNAME,MID=>$MID);
	my ($configel) = $toxml->findElements('CONFIG');

	my $sbtxt = $ZOOVY::cgiv->{'sitebuttons'};
	if ($sbtxt eq '') { $sbtxt = $ZOOVY::cgiv->{'sitebuttons_txt'}; }	
	if ($sbtxt eq '') { $sbtxt = 'default'; } ## yipes!?!?

	if (index($sbtxt,'|')==-1) {
		## passing an old button reference, lets load it out of info.txt
		$sbtxt =~ s/[^a-z0-9\_]+//gs;	# strip bad characters
		if (open F, "</httpd/static/sitebuttons/$sbtxt/info.txt") {
			$/ = undef; $sbtxt = <F>; $/ = "\n";
			close F;
			}
		}
	$configel->{'SITEBUTTONS'} = $sbtxt;
	$toxml->save();
	$GTOOLS::TAG{'<!-- MESSAGE -->'} = "<center><font face='helvetica, arial' color='red' size='5'><b>Successfully Saved!</b></font></center><br><br>";;

	$ACTION = '';	
	$MODE = 'WRAPPER';
	}



##
## Gives the user an editor for the site buttons and theme associated with a wrapper
##
if ($ACTION eq 'SITEBUTTONS') {

	require TOXML::UTIL;
	my ($toxml) = TOXML->new('WRAPPER',$DOCID,USERNAME=>$USERNAME,MID=>$MID);
	my ($config) = $toxml->initConfig();
	my ($configel) = $toxml->findElements('CONFIG');

	$GTOOLS::TAG{'<!-- DOCID -->'} = $DOCID;	
	my $out = '';
	my $c = '';

	$SITE::merchant_id = $USERNAME;			
	$GTOOLS::TAG{'<!-- BUTTON_PREVIEW -->'} = "<tr>".
		"<td>".&TOXML::RENDER::RENDER_SITEBUTTON({'TYPE'=>'BUTTON',BUTTON=>'add_to_cart'},$toxml)."</td>".
		"<td>".&TOXML::RENDER::RENDER_SITEBUTTON({'TYPE'=>'BUTTON',BUTTON=>'continue_shopping'},$toxml)."</td>".
		"<td>".&TOXML::RENDER::RENDER_SITEBUTTON({'TYPE'=>'BUTTON',BUTTON=>'update_cart'},$toxml)."</td>".
		"<td>".&TOXML::RENDER::RENDER_SITEBUTTON({'TYPE'=>'BUTTON',BUTTON=>'back'},$toxml)."</td>".
		"</tr><tr>".
		"<td>".&TOXML::RENDER::RENDER_SITEBUTTON({'TYPE'=>'BUTTON',BUTTON=>'cancel'},$toxml)."</td>".
		"<td>".&TOXML::RENDER::RENDER_SITEBUTTON({'TYPE'=>'BUTTON',BUTTON=>'empty_cart'},$toxml)."</td>".
		"<td>".&TOXML::RENDER::RENDER_SITEBUTTON({'TYPE'=>'BUTTON',BUTTON=>'checkout'},$toxml)."</td>".
		"<td>".&TOXML::RENDER::RENDER_SITEBUTTON({'TYPE'=>'BUTTON',BUTTON=>'forward'},$toxml)."</td>".
		"</tr>";
		
	$GTOOLS::TAG{'<!-- SITEBUTTONS_TXT -->'} = $configel->{'SITEBUTTONS'};
	if (open SITEBUTTONS, "</httpd/static/sitebuttons.txt") {
		while (<SITEBUTTONS>) {
			my ($code, $name, $format) = split(/\t/,$_,3);
			if ($name eq '') { $name = $code; }
			if ($format eq '') { $format = 'gif'; }

				$c .= qq~
			<tr>
				<td><input type="radio" name="sitebuttons" value="$code"></td>
				<td>$name</td>
				<td><img src="http://proshop.zoovy.com/graphics/sitebuttons/$code/add_to_cart.$format"></td>
				<td><img src="http://proshop.zoovy.com/graphics/sitebuttons/$code/update_cart.$format"></td>
			</tr>
			~;
			}
		}

	$GTOOLS::TAG{'<!-- BUTTON_LIST -->'} = $c;
	$template_file = 'wrapper-sitebuttons.shtml';
	}






if ($ACTION eq '') {
	$template_file = "modes.shtml";

	my $pretty = lc($MODE);
	$pretty =~ s/_/ /g;
	$GTOOLS::TAG{'<!-- MODE_PRETTY -->'} = ucfirst($pretty);


	## Load the full theme list.
	my $c = '';
	my $z = '';
	my $arref = &TOXML::UTIL::listDocs($USERNAME,$MODE,DETAIL=>1);
	my $ctr =0;

	my $c_row = "F0F0F0";
   my $z_row = "F0F0F0";

	foreach my $inforef (sort @{$arref}) {
		$ctr++;
		#last if $ctr > 20;
		#print STDERR Dumper($inforef);
		my $TITLE = $inforef->{'TITLE'};
		if ($TITLE eq '') { $TITLE = '<i>Title Not Set</i>'; }
		my $DOCID = $inforef->{'DOCID'};
		my $SUBTYPE = $inforef->{'SUBTYPE'};
		my $SUBTYPETXT = $TOXML::UTIL::LAYOUT_STYLES->{$SUBTYPE}[0];
		
		## CUSTOM TOXML
		if ($inforef->{'MID'}>0) {
			# only look at userland flows

			my $pref_fmt = &ZWEBSITE::fetch_website_attrib($USERNAME,'pref_template_fmt');
			my $html_checked = ($pref_fmt eq 'HTML')?'checked':'';
			my $xml_checked = ($pref_fmt eq 'XML')?'checked':'';
			my $plugin_checked = ($pref_fmt eq 'PLUGIN')?'checked':'';

			$c .= qq~
					<tr class="table_bg0" bgcolor="$c_row">
						<td bgcolor="$c_row">$DOCID
							<a href="index.cgi?ACTION=ACKDELETE&MODE=$MODE&DOCID=$DOCID">
							<font color=red size="-3"><i>(remove)</i></font></a></td>
						<td bgcolor="$c_row">$TITLE</td> 
						<td align="right" bgcolor="$c_row" nowrap>
							<form action="index.cgi" method="POST">
								<input type=hidden name="DOCID" value="$DOCID">
								<input type=hidden name="MODE" value="$MODE">
								<input $xml_checked type=radio name="TYPE" value="xml">XML&nbsp;&nbsp;
							 	<input $html_checked type=radio name="TYPE" value="html">HTML&nbsp;&nbsp;
							 	<input $plugin_checked type=radio name="TYPE" value="plugin">Plugin&nbsp;&nbsp;
							 	<input type=submit class="button" name="ACTION" value="Edit">
							</form>
						</td>
							~;

			if ($MODE eq 'WRAPPER') {
				$c .= qq~<td>
					<form action="index.cgi" method="GET">
						<input type=hidden name="DOCID" value="$DOCID">
						<input type=hidden name="MODE" value="$MODE">
						<input type=hidden name="ACTION" value="SITEBUTTONS">
						<input type=submit class="button" value="Site Buttons">
					</form>
					</td>~;
				}

			$c .= qq~
					</tr>~;
			$c_row = ($c_row eq "F0F0F0")?"FFFFFF":"F0F0F0";
			}

		## Zoovy TOXML
		else {
			next if $DOCID eq '';
			$z .= qq~
					<tr>
						<td bgcolor="$z_row">$DOCID</td>
						<td bgcolor="$z_row">$TITLE</td>
						<td align="center" nowrap bgcolor="$z_row">
						<a href="index.cgi?ACTION=DOWNLOAD&MODE=$MODE&DOCID=$DOCID">[ View/Copy ]</a></td>
					</tr>~;
			$z_row = ($z_row eq "F0F0F0")?"FFFFFF":"F0F0F0";
			}			
		}

	if ($c eq '') { $c = '<i>None</i>'; }
	if ($z eq '') { $z = '<i>None</i>'; }
	
	$GTOOLS::TAG{'<!-- CUSTOM_TOXML -->'} = $c;
	$GTOOLS::TAG{'<!-- ZOOVY_TOXML -->'} = $z;

	undef $arref;
	}


&GTOOLS::output(
   'title'=>'Setup : TOXML Manager',
   'file'=>$template_file,
   'header'=>$header,
   'help'=>'#50156',
   'tabs'=>\@TABS,
   'bc'=>\@BC,
   );



